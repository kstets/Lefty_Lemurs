New Table("HandGrasps", Add Rows(511), New Script("Source", Open("$DESKTOP/HandGrasps.csv", columns(New Column("CatEatgoResty", Character, "Nominal"), New Column("Troop", Character, "Nominal"), New Column("Focal", Character, "Nominal"), New Column("Species", Character, "Nominal"), New Column("Age", Numeric, "Continuous", Format("Best", 12)), New Column("Sex", Character, "Nominal"), New Column("Month", Numeric, "Continuous", Format("Best", 12)), New Column("Day", Numeric, "Continuous", Format("Best", 12)), New Column("Year", Numeric, "Continuous", Format("Best", 12)), New Column("Time", Numeric, "Continuous", Format("h:m:s", 11, 0), Input Format("h:m:s", 0)), New Column("Side", Character, "Nominal"), New Column("Note", Character, "Nominal")), Import Settings(End Of Line(CRLF, CR, LF), End Of Field(Comma, CSV(1)), Strip Quotes(1), Use Apostrophe as Quotation Mark(0), Use Regional Settings(0), Scan Whole File(1), Treat empty columns as numeric(0), CompressNumericColumns(0), CompressCharacterColumns(0), CompressAllowListCheck(0), Labels(1), Column Names Start(1), Data Starts(2), Lines To Read("All"), Year Rule("20xx")))), New Column("Category", Character, "Nominal", Set Selected, Set Values({"Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Eat", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Loc", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest", "Rest"})), New Column("Troop", Character, "Nominal", Set Values({"P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "N", "N", "N", "N", "N", "N", "N", "N", "N", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddieuria", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Furia", "Furia", "Furia", "Furia", "Furia", "N", "N", "N", "N", "N", "N", "X", "X", "X", "X", "X", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "M", "M", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "P", "N", "N", "N", "X", "X", "M", "M", "M", "M", "Furia", "P", "P", "P", "P", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "X", "X", "X", "X", "X", "X", "X", "X", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "P", "P", "P", "P", "P", "P", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "X", "X", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia"})), New Column("Focal", Character, "Nominal", Set Values({"Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Duggan", "Duggan", "Duggan", "Duggan", "Duggan", "Duggan", "Duggan", "Duggan", "Duggan", "Duggan", "Duggan", "Duggan", "Duggan", "Duggan", "Duggan", "Duggan", "Duggan", "Duggan", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Randy", "Randy", "Randy", "Randy", "Randy", "Randy", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sierra Mist", "Sophia", "Sophia", "Sophia", "Sophia", "Sophia", "Sophia", "Sophia", "Sophia", "Sophia", "Sophia", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Carolina", "Duggan", "Duggan", "Duggan", "Duggan", "Duggan", "Furia", "Furia", "Furia", "Furia", "Furia", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Randy", "Randy", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rupert", "Rupert", "Rupert", "Sierra Mist", "Sierra Mist", "Sophia", "Sophia", "Sophia", "Sophia", "Thrax", "Carolina", "Carolina", "Carolina", "Carolina", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Furia", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Gisela", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Licinius", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Maddie", "Rico", "Rico", "Rico", "Rico", "Rico", "Rico", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Rupert", "Sierra Mist", "Sierra Mist", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax", "Thrax"})), New Column("Species", Character, "Nominal", Set Values({"Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Lcat", "Lcat", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Pcoq", "Pcoq", "Pcoq", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Pcoq", "Emon", "Emon", "Emon", "Emon", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Lcat", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Emon", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Lcat", "Lcat", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq", "Pcoq"})), New Column("Age", Numeric, "Continuous", Format("Best", 12), Set Values([12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 5, 5, 5, 5, 5, 5, 5
	, 5, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 16, 16, 16, 16, 16
	, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5
	, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
	, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10
	, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12
	, 12, 12, 12, 14, 14, 14, 14, 14, 5, 5, 5, 5, 5, 10, 10, 10, 10, 10, 10, 29, 29, 29, 29, 29, 16, 16, 16, 16, 16, 16, 16, 16, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 12, 12, 12, 14, 14, 17, 17
	, 17, 17, 10, 12, 12, 12, 12, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 29, 29, 29
	, 29, 29, 29, 29, 29, 16, 16, 16, 16, 16, 16, 5, 5, 5, 5, 5, 5, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12
	, 12, 12, 12, 14, 14, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10])), New Column("Sex", Character, "Nominal", Set Values({})), New Column("Month", Numeric, "Continuous", Format("Best", 12), Set Values([6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 7, 7, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 6, 7, 6, 7, 6, 7, 7, 7, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7
	, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 6, 6, 7, 7, 6, 7, 7, 7, 7, 7, 7, 6, 6, 6, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6
	, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7
	, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7
	, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6
	, 6, 6, 6, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 7, 7, 7, 7
	, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7
	, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7])), New Column("Day", Numeric, "Continuous", Format("Best", 12), Set Values([30, 30, 30, 30, 30, 30, 30, 30, 23, 23, 23, 23, 23, 23, 23, 23, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 8, 28, 24, 8, 8, 24, 24, 28, 28, 28, 28, 8, 8, 8, 8, 8, 8, 8, 27, 1, 27, 1, 27, 1, 1, 1, 24
	, 13, 14, 13, 13, 13, 13, 13, 14, 14, 5, 5, 5, 5, 29, 29, 29, 29, 29, 29, 29, 5, 5, 5, 5, 22, 22, 5, 5, 29, 5, 5, 5, 5, 5, 5, 22, 22, 22, 5, 5, 5, 5, 5, 5, 28, 28, 28, 28, 29, 28, 28, 28, 28, 28, 27, 27
	, 23, 23, 23, 23, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 30, 28, 28, 28, 28, 28, 28, 30, 30, 28, 28, 28, 28, 28, 28, 30, 30, 30, 30, 30, 30, 30, 30, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 28, 30
	, 28, 28, 28, 28, 30, 30, 30, 30, 28, 28, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 6, 6, 12, 12, 12, 12, 12, 12, 6, 6, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12
	, 29, 29, 29, 29, 29, 29, 29, 29, 5, 22, 22, 22, 22, 22, 22, 22, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 30, 30, 30, 30, 30, 30, 30, 27, 27, 27, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 24, 24
	, 24, 24, 24, 24, 24, 24, 24, 24, 24, 6, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 1, 6, 6, 24, 24, 24, 24, 24, 24, 24, 6, 1, 1, 1, 6, 6, 6, 28, 28, 28, 28, 28, 28, 28, 23, 23, 23, 23, 23, 30, 30, 30, 30
	, 28, 30, 30, 24, 24, 24, 24, 28, 24, 24, 27, 24, 24, 13, 14, 14, 14, 13, 14, 29, 29, 29, 29, 29, 28, 28, 28, 8, 28, 28, 27, 7, 16, 16, 28, 16, 16, 16, 16, 28, 16, 28, 28, 30, 30, 30, 16, 30, 30, 12, 12
	, 12, 22, 29, 27, 21, 21, 27, 6, 23, 23, 28, 30, 1, 1, 1, 1, 1, 1, 1, 1, 27, 27, 1, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 14, 14, 14, 14, 13, 13, 13, 13, 14, 14, 14, 13, 14
	, 14, 13, 29, 29, 29, 22, 22, 29, 29, 5, 28, 28, 8, 8, 8, 8, 28, 30, 30, 30, 30, 30, 6, 6, 6, 6, 6, 6, 6, 6, 12, 12, 12, 6, 6, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12
	, 12, 12, 12, 12, 12, 12, 29, 29, 1, 1, 1, 1, 1, 6, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 6, 6, 6])), New Column("Year", Numeric, "Continuous", Format("Best", 12), Set Values([2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022
	, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022
	, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022
	, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022
	, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022
	, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022
	, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022
	, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022
	, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022
	, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022
	, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022
	, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022
	, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022
	, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022
	, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022
	, 2022])), New Column("Time", Numeric, "Continuous", Format("h:m:s", 11, 0), Input Format("h:m:s", 0), Set Values([30326, 30509, 30234, 30347, 30433, 31416, 31429, 32154, 30777, 30809, 31087, 31197, 31919, 31224, 30896, 31144, 38833, 30644, 30960, 29946, 30300, 30464, 30494, 30794, 30840, 30973, 31002, 30402, 37250
	, 54560, 38630, 36372, 36465, 35702, 38899, 54000, 54122, 54332, 54450, 36399, 36447, 36670, 36736, 36958, 36991, 37276, 41599, 36984, 41614, 39100, 38701, 39074, 39106, 39145, 32674, 29109, 34253, 28759
	, 29162, 29831, 29867, 31673, 34264, 34278, 32521, 32601, 32735, 32896, 33113, 33204, 33266, 33478, 33534, 31422, 30837, 32671, 31128, 31179, 32105, 34190, 34425, 32310, 32500, 30857, 31084, 31145, 31192
	, 32141, 32168, 32207, 34390, 35130, 35264, 32312, 31018, 32263, 32293, 32364, 31055, 53459, 53534, 53560, 53582, 38930, 54081, 53479, 55200, 54109, 54487, 35639, 35985, 36359, 36463, 36728, 36894, 34212
	, 34536, 32958, 33001, 33076, 33115, 33148, 33192, 33232, 33653, 33782, 33614, 33288, 33965, 33354, 33470, 33488, 33500, 36558, 36582, 33591, 33612, 33838, 33884, 33926, 33955, 33697, 33754, 34693, 36817
	, 36904, 34013, 34414, 35720, 40519, 41617, 41698, 41907, 40659, 40980, 41072, 41301, 41380, 41380, 41663, 32901, 34286, 33316, 33418, 33453, 33528, 34660, 34784, 36459, 36717, 33433, 33549, 33570, 34711
	, 34742, 34764, 36432, 36613, 36687, 36880, 36934, 36973, 37000, 37015, 37039, 37071, 37098, 37111, 34181, 34828, 34439, 34452, 32416, 32474, 32604, 32747, 33509, 33759, 33282, 33307, 32442, 32461, 32487
	, 32506, 32630, 32953, 33015, 33125, 33199, 33530, 33694, 34161, 34877, 35162, 36131, 36222, 35964, 36078, 36234, 34740, 34758, 36109, 37124, 26780, 29570, 29803, 29925, 26856, 29109, 29190, 37288, 37595
	, 34473, 34542, 34595, 34724, 35038, 34345, 34566, 34673, 34835, 34963, 34991, 35054, 35062, 35096, 37094, 38217, 38336, 38492, 38555, 38850, 39422, 39719, 33179, 33497, 30455, 33159, 33314, 33396, 33493
	, 33014, 33169, 33205, 33339, 33364, 33382, 33412, 33441, 33503, 33579, 39717, 39983, 40213, 40790, 40840, 40882, 40936, 41017, 41050, 41207, 41282, 30809, 41728, 41971, 42080, 42346, 42442, 40043, 40174
	, 40836, 40960, 41324, 33195, 29922, 30730, 41489, 41857, 41981, 42190, 42246, 42379, 42533, 30660, 33521, 33568, 33603, 30493, 30577, 30420, 35845, 36690, 38966, 35932, 35986, 38628, 38656, 31070, 31291
	, 31680, 33789, 33978, 32004, 32746, 31042, 31364, 37284, 31183, 31958, 38266, 38288, 38318, 39030, 56700, 31472, 31546, 41574, 32940, 34216, 31440, 33788, 34288, 35369, 29986, 35445, 32862, 31762, 30795
	, 34125, 31727, 51256, 53270, 53770, 33074, 51250, 51318, 34364, 31549, 38587, 38924, 32863, 38783, 39123, 39360, 39570, 33254, 39143, 32624, 34272, 34557, 36779, 34608, 40118, 34133, 36392, 30856, 31887
	, 32602, 28792, 35986, 31441, 33912, 35576, 30981, 27767, 30756, 33063, 36964, 31537, 35569, 35869, 36056, 36170, 35508, 35574, 35673, 36732, 38778, 41362, 37536, 29231, 29398, 32690, 32894, 33066, 34067
	, 34413, 34488, 35894, 36159, 36214, 36350, 29866, 29936, 30498, 30764, 32672, 34508, 35781, 35835, 36379, 28840, 28964, 29051, 29454, 35398, 36245, 36610, 28695, 34623, 35562, 28861, 31098, 32511, 31976
	, 34131, 36149, 31841, 33827, 31542, 51774, 51904, 34010, 34751, 33746, 35179, 35605, 34362, 36729, 33547, 34384, 35024, 31797, 31966, 32646, 32776, 32886, 33196, 33556, 34410, 31554, 34159, 34636, 31846
	, 32610, 32702, 34029, 34658, 36673, 30359, 31587, 31627, 31674, 31697, 31820, 30583, 30707, 31656, 31715, 31988, 33353, 30795, 32155, 30819, 32104, 30878, 31194, 32114, 32189, 31859, 35370, 36365, 35039
	, 34305, 34039, 34258, 35022, 31110, 34331, 34865, 35423, 32537, 34101, 34150, 32093, 34139, 28025, 28086, 28276, 29674, 27999])), New Column("Side", Character, "Nominal", Set Values({"R", "R", "L", "L", "L", "L", "R", "L", "R", "R", "R", "R", "R", "R", "L", "L", "R", "L", "L", "R", "R", "R", "R", "R", "R", "R", "R", "R", "L", "R", "L", "L", "L", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "L", "L", "R", "R", "R", "R", "L", "L", "L", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "L", "L", "L", "R", "L", "L", "L", "L", "L", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "L", "L", "L", "L", "L", "L", "L", "L", "R", "R", "R", "R", "R", "R", "L", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "L", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "R", "L", "L", "R", "R", "R", "R", "R", "L", "L", "L", "L", "R", "L", "R", "R", "L", "L", "L", "L", "L", "L", "L", "L", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "L", "R", "L", "L", "L", "L", "L", "L", "L", "L", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "L", "L", "L", "R", "R", "L", "L", "R", "R", "R", "R", "R", "R", "R", "R", "R", "L", "L", "L", "L", "L", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "L", "L", "L", "L", "L", "L", "L", "R", "L", "L", "R", "R", "R", "R", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "L", "L", "L", "L", "L", "L", "L", "L", "R", "R", "R", "L", "L", "R", "L", "L", "L", "R", "R", "R", "R", "L", "L", "R", "R", "R", "L", "R", "R", "R", "L", "L", "R", "L", "R", "R", "R", "R", "L", "L", "L", "R", "R", "R", "R", "L", "L", "L", "L", "L", "R", "R", "R", "L", "R", "L", "L", "L", "L", "R", "L", "L", "L", "L", "L", "R", "R", "R", "R", "R", "L", "R", "R", "L", "R", "R", "R", "L", "L", "L", "L", "L", "R", "R", "L", "R", "R", "R", "R", "R", "R", "R", "L", "L", "L", "L", "L", "R", "R", "R", "R", "L", "L", "L", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "R", "R", "R", "R", "R", "R", "L", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "L", "R", "L", "L", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "R", "R", "R", "R", "R", "R", "R", "R", "R", "L", "L", "L", "R", "R", "L", "L", "R", "R", "R", "L", "L", "L", "L", "L", "R", "R", "R", "L", "L", "L", "R", "R", "R", "R", "R", "R", "R"})), New Column("Note", Character, "Nominal", Set Values({"Grasp silverberry with right hand and eat", "Grasp and eat silverberry with right hand on top", "Grab silverberry with left hand and eat", "Grasp silverberry with left hand and eat", "Grasp silverberry plant with left hand and eat", "Forage and eat evergreen leaves with left hand", "Forage and eat evergreen leaves with right hand", "Eat unknown berry with left hand", "Forage with right hand (silverberry)", "Forage with right hand (silverberry)", "Forage with right hand", "Forages with right hand (doesn't eat, but grabs branch as if she's going to forage)", "Forage with right hand (maple)", "Eats silverberry out of right hand", "Forage with left hand (silverberry)", "Forage with left hand", "Grasp silverberry branch with right hand.", "Grasp silverberry with left hand on top", "Grasp silverberry plant with left hand", "Grab silverberry with right hand on top, holding with both hands.", "Grasp silverberry with right hand on top", "Grasp silverberry with right hand on top", "Grasp silverberry with right hand on top", "Grasp silverberry plant with right hand", "Grasp silverberry plant with right hand", "Grasp silverberry plant with right hand", "Grasp silverberry with right hand", "Grasp silverberry with right hand and eat", "Grasp chow with left hand, then immedately switch to right", "Eat food from enrichment item from right hand", "Duggan eats spinach out of his left hand.", "Eat pineapple (from diet) with left hand", "Eat sweet potato (from diet) with left hand", "Duggan eats chow with his right hand", "Duggan eats diet with his right hadn", "Eat pineapple with right hand", "Eat banana slice with right hand", "Eat banana slice with right hand", "Eats food from enrichment item from right hand", "Eat pineapple (from diet) with right hand", "Eat sweet potato (from diet) with right hand", "Eat chow from right hand", "Eat chow from right hand", "Eat chow from right hand", "Eat chow from right hand", "Eat chow with right hand", "Grasp leaves with left hand", "Laying on back. Grasps and eats unknown grass with right hand. Very cute and adorable.", "Eat leaves from left hand. Stop at 11:35:37", "Eat peanut with left hand (from diet)", "Eat unknown plant with right hand", "Eat peanut with right hand (from diet)", "Eat peanut with right hand (from diet)", "Eat diet with right hand", "Forage with left hand", "Eat chow with left hand", "Eat chow from left hand", "Eat leaf with right hand", "Eat leaf with right hand. At same time, grasp pole with left hand and both feet. Stop at 8:06:35", "Eat chow with right hand", "Eat leaf from right hand", "Eat peanut with right hand (given by care tech so Silas can be taken for vet appointment)", "Eat chow from right hand", "Eat chow from right hand", "Forage and eat with right hand", "Forage and eat with right hand", "Forage and eat with right hand", "Forage and eat with right hand", "Grasp branch with right hand while foraging.", "Grasp branch with right hand while foraging.", "Grasp branch with left hand to eat from", "Grasp branch with left hand on top and eat (grapevine)", "Grasp grapevine branch with left hand and eat.", "Grasp and eat maple leaf with right hand. Holding tree with 4 limbs total.", "Grasp and eat maple leaf with left hand. Holding tree with 4 limbs total.", "Forage and eat with left hand", "Eat with left hand", "Eat with left hand", "Eat unknown leaves with left hand", "Forage with right hand", "Forage with right hand", "Forage with right hand", "Forage with right hand", "Eat maple leaf with right hand. Holding tree with 4 limbs total.", "Eat with right hand", "Eat with right hand", "Eat with right hand", "Eat with right hand", "Eat from right hand", "Eat from right hand", "Forage with left hand", "Forage with left hand", "Forage with left hand", "Forage with left hand", "Forage and eat with left hand", "Forage and eat with left hand", "Forage and eat with left hand", "Forage and eat with left hand", "Forage and eat with right hand", "Grab and eat chow with right hand", "Grasp and eat chow with right hand.", "Grasp and eat chow with right hand.", "Grasp and eat chow with right hand.", "Grasp and eat chow with right hand.", "Eat banana slice with left hand", "Eat chow out of right hand", "Eat pineapple with right hand", "Eat banana slice with right hand", "Eat banana slice with right hand", "Randy grabs his poop with his right hand and licks it. He does this for about 5 minutes, always grabbing with his right hand.", "Forage for pinecone with right hand. Eats with both hands at first, then moves to just right hand.", "Eat chow with right hand. Now locked in outdoor cage.", "Eat chow with right hand.", "Eat broccoli with right hand", "Eat chow with right hand", "Grasp silverberry branch with left hand. Hold tree with 3 other limbs.", "Grasp silverberry branch with right hand. Hold tree with 3 other limbs.", "Grasp bamboo with right hand. Hold tree with 3 other limbs", "Grasp bamboo with right hand. Hold tree with 3 other limbs", "Grasp bamboo with right hand. Hold tree with 3 other limbs", "Grasp silverberry leaf with right hand. Hold tree with 3 other limbs", "Grasp silverberry leaf with right hand. Hold tree with 3 other limbs. Then add left hand.", "Grasp silverberry leaf with right hand. Hold tree with 3 other limbs.", "Grasp silverberry leaf with right hand. Hold tree with 3 other limbs.", "Grasp silverberry with right hand", "Hold branch with 3 other limbs", "Forage oak leaves with right hand", "Grasp and eat silverberry branch with right hand. Hold tree with 3 other limbs.", "Grasp silverberry branch with and eat with right hand. Hold tree with 3 other limbs.", "Grasp and eat silverberry branch with right hand. Hold tree with 3 other limbs.", "Grasp and eat silverberry branch with right hand. Hold tree with 3 other limbs.", "Grasp and eat silverberry branch with right hand. Hold tree with 3 other limbs.", "Grasp and eat silverberry branch with right hand. Hold tree with 3 other limbs.", "Forage and eat bamboo with right hand", "Forage and eat bamboo with right hand", "Grasp silverberry with left hand, then hold with both hands.", "Grasp silverberry with left hand, then hold with both hands.", "Grasp branch with left hand, then add right hand. Hold tree with 3 other limbs.", "Grasp bamboo leaf with left hand. Hold tree with 3 other limbs.", "Grasp silverberry branch with and eat with left hand. Hold tree with 3 other limbs.", "Grasp silverberry branch with and eat with left hand. Hold tree with 3 other limbs.", "Forage and eat oak hands with left hand", "Forage and eat oak hands with left hand", "Forage and eat silverberry with left hand", "Forage and eat silverberry with left hand", "Forage and eat silverberry with left hand", "Grasp oak twig with left hand, but did not eat", "Forage and eat bamboo leaf with left hand", "Forage and eat bamboo leaf with left hand", "Rico picks up food from bowl and eats it out of his right hand", "Rico picks up food and eats it from his right hand", "Rico picks up food and eats it from his right hand", "Rico grabs food and eats it using his right hand", "Rico holds food (cucumber slice) in right hand and eats it from his right hand", "Rico eats chow from his left hand", "Rico eats chow from his left hand", "Rico eats diet from left hand", "Rico switches the food to his left hand and eats out of his left hand.", "Rico fishes around food bowl with right hand and picks up a piece of food.", "Rico picks up food and eats it with his left hand", "Grasp bamboo leaf with tight hand, then switch to left hand. Holding onto tree with 3 limbs.", "Forage silverberry with right hand", "Grasp silverberry branch with left hand. Hold tree with 3 other limbs.", "Grasp silverberry branch with left hand. Hold tree with 3 other limbs.", "Grasp silverberry branch with left hand. Hold tree with 3 other limbs.", "Grasp silverberry branch with left hand. Hold tree with 3 other limbs.", "Forage silverberry with left hand", "Forage silverberry with left hand", "Forage silverberry with left hand", "Forage silverberry with left hand", "Grasp silverberry branch with right hand. Hold tree with 3 other limbs.", "Grasp silverberry branch with right hand. Hold tree with 3 other limbs.", "Grasp silverberry branch with right hand. Hold tree with 3 other limbs.", "Forage silverberry with right hand", "Forage silverberry with right hand", "Forage silverberry with right hand", "Forage silverberry with right hand", "Forage silverberry with right hand", "Forage bamboo with right hand", "Forage silverberry with right hand", "Forage silverberry with right hand", "Forage silverberry with right hand", "Forage silverberry with right hand", "Forage silverberry with right hand", "Forage silverberry with right hand", "Forage silverberry with right hand", "Forage silverberry with right hand", "Forage silverberry with right hand", "Forage silverberry with left hand", "Reach for silverberry with right hand", "Eat lettuce with left hand", "Eat lettuce with left hand", "Eat lettuce from diet with left hand", "Eat chow from left hand", "Eat lettuce from diet with left hand", "Eat cucumber from diet with left hand", "Eat chow from left hand", "Eat kale from diet with left hand", "Eat stick with right hand", "Switch stick back to right hand and eat. Stop at 9:15:36", "Eat chow from right hand", "Eat chow from right hand", "Eat chow from right hand", "Eat carrot from diet with right hand", "Eat carrot from diet with right hand", "Eat kale from diet with right hand. WHile doing so, grasp onto mesh wall with left hand.", "Eat chow from right hand", "Eat chow from right hand", "Eat chow from right hand", "Eat carrot from diet with right hand", "Eat broccoli from diet with right had", "Eat chow from right hand", "Eat stick from right hand.", "Eat chow from right hand", "Grasp and eat from silverberry branch with right hand.", "Grasp silverberry branch with right hand on top and eat.", "Grasp branch with both hands, but left hand on top.", "Grasp and eat from silverberry branch with both hands, but left hand on top.", "Grasp silverberry branch with left hand on top and eat. Steadying branch with right hand on bottom.", "Grasp and eat grass with rigth hand", "Grasp and eat grass with rigth hand", "Grasp and eat from silverberry branch with left hand.", "Eat unknown grass with left hand", "Sierra Mist forages (locust plant). She is grabbing the plant with her right hand on top.", "Forages with right hand", "Forages with right hand", "Forages with right hand", "Eats locust with right hand", "Eats unknown plant from right hand", "Sierra eats unknown leaf from her right hand", "Eat chow from right hand", "Eat chow from left hand", "Forage and eat unknown grass with left hand", "Forage and eat unknown grass with right hand", "Forage and eat unknown grass with left hand", "Forage and eat unknown grass with left hand", "Forage and eat unknown grass with left hand", "Forage and eat unknown grass with right hand", "Forage and eat unknown grass with right hand", "Forage and eat unknown grass with right hand", "Forage and eat unknown grass with right hand", "Forage and eat unknown grass with right hand", "Forage and eat unknown grass with right hand", "Forage and eat unknown grass with right hand", "Forage and eat unknown grass with right hand", "Forage and eat unknown grass with right hand", "Forage and eat unknown grass with right hand", "Get chow out of bowl with mouth. Take chow out of mouth with left hand and eat from left hand.", "Get chow out of bowl with mouth. Take chow out of mouth with left hand and eat from left hand.", "Get chow out of bowl with mouth. Take chow out of mouth with left hand and eat from left hand.", "Get chow out of bowl with mouth. Take chow out of mouth with left hand and eat from left hand.", "Get chow out of bowl with mouth. Take chow out of mouth with left hand and eat from left hand.", "Get chow out of bowl with mouth. Take chow out of mouth with left hand and eat from left hand.", "Get chow out of bowl with mouth. Take chow out of mouth with left hand and eat from left hand.", "Randy forage for pine needles with right hand", "Sophia forages with her left hand", "Sophia picks up a leaf and eats it from her left hand", "Forage and eat unknown leaf with right hand.", "Forage and eat unknown leaf with right hand.", "Forage and eat with right hand", "Forage and eat with right hand", "Forage and eat unknown leaf. Left hand on top right hand supporting botton of branch", "Forage and eat unknown leaf with left hand", "Forage and eat unknown leaf with left hand. Stop at 9:15:11", "Switch hands. Now forage and eat unknown leaf with left hand. Stop at 9:15:38", "Forage and eat with left hand", "Forage and eat with left hand", "Forage and eat with left hand", "Forage and eat with left hand", "Forage and eat with left hand", "Forage and eat with left hand", "Thrax eats chow from his left hand. He's locked in the CSB.", "Thrax eat diet out of left hand.", "Eat peanut out of left hand", "Eat lettuce from left hand.", "Eat chow from left hand. Stop at 11:21:02", "Eat diet out of left hand. Stop at 11:21:34", "Eats with left hand", "Eats out of left hand", "Grabs food from bowl with left hand, then puts some in right hand.", "Eat lettuce from left hand", "Eat lettuce from left hand", "unknown leaves through fence. Stop at 8:33:54", "Forages unknown grass with rght hand", "Forages dog fennel with right hand", "Forages dog fennel with right hand", "Forages dog fennel with right hand", "Forages dog fennel with right hand", "Eat chow out of right hand", "Eat lettuce and chow from right hand.", "Eat from right hand.", "Eats with right hand", "Eat with right hand (diet)", "Eat unknown leaf with right hand", "Eating pine needles with right hand. Stop at 8:20:27", "unknown leaves", "Forages tulipopper plant with left hand. Stops at 11:34:44. Then starts again at 11:34:53", "Forages dog fennel with left hand", "Forages dog fennel with left hand", "Forages dog fennel with left hand", "Forage dog fennel with left hand", "Forage dog fennel with left hand", "Forages at grass through fence with left hand", "unknown leaves", "Forage and eat with right hand on top. Stop at 9:19:14", "Forage and eat with right hand", "Forage and eat with right hand. Stop at 9:21:34", "Forage and eat muscovy grapevine with left hand.", "Forage and eat muscovy grapevine with left hand.", "Forage and eat muscovy grapevine with right hand. Stop at 8:28:01", "Leap to bamboo branch holding it with left hand on top.", "Leap to bamboo branch holding it with left hand on top.", "Leap to bamboo tree with left hand on top", "Leap to bamboo branch holding it with right hand on top. Does this twice.", "Leap to bamboo branch holding it with right hand on top.", "Moving accross bamboo with right hand on top.", "Moving accross bamboo with right hand on top.", "Grab branch with left hand first", "Leap to branch, grabbing it with left hand on top", "Leap to branch, grabbing it with right hand on top", "Leap to other branch, grasping it with right hand first", "Leap to branch, grasping it with right hand first (right hand is on top)", "Leap to tree and grasp with left hand on top", "Leap with right hand on top of branch", "Leap 4 times from tree-to-tree with right hand on top", "Moving down tree with right hand on top", "Going down branch with left hand on top.", "Leap to tree with left hand on top", "Grasp branch with right hand first, then left hand, then climb up.", "Duggan leaps to branch in enclosure. He grabs it with his left hand first.", "Duggan grabs his swing with his left hand first", "Duggan grabs his swing with his right hand first", "Duggan grabs swing with his right hand", "Grasp branch with right hand", "Leap and grasp branch with left hand on top", "Leap to branch. Grasps branch with left hand on top.", "Grasp branch with left hand", "Leap to branch. Grasp with right hand on top.", "Leap and grasp branch with right hand first.", "While moving, grasp onto mesh wall with all 4 limbs. Right hand on top. Stop at 8:44:12", "Grasp branch above with right hand", "Grasp mesh with all 4 limbs while locomoting. Left hand on top.", "Leap and grasp pole with all 4 limbs, left hand top", "Climb up pole. Holding pole with all 4 limbs, but left hand on top the whole time.", "Leap to pole and grasp with all 4 limbs. Left hand on top.", "Grasp tree with left hand on top.", "Jump to other tree branch with right hand on top.", "Grasp branch with right hand on top", "Climb up tree with right hand on top.", "Locomote down tree with left hand on top", "Grasp cage wire with right hand on top", "Grab \!"door frame\!" to indoor enclosure with left hand", "Grasp branch with left hand", "Land on mesh wall with left hand on top then climb up", "Leap to branch with left hand on top.", "Grasp branch with right hand on top.", "Grasp fence with left hand", "Jump onto mesh wall before clinging up with left hand on top", "Rico leaps to a branch and grabs it with his left hand first", "Rico leaps and grabs the branch with his left hand first", "Leap and grasp branch with left hand on top", "Rico leaps to branch and grabs it with his left hand first", "Rico leaps and grabs the branch with his right hand first", "Rico leaps and grabs the branch with his right hand first", "Rico leaps and grabs the branch with his right hand first", "Leap to branch. Grasp with right hand on top.", "Rico grabs a branch with his left hand", "Leap and grasp branch with right hand on top", "Grasp bamboo tree with right hand on top. Hold tree with 3 other limbs.", "Leap with left hand on top of branch", "Leap to tree with right hand on top", "Leap with right hand on top of branch", "Rico leaps and grabs branch with his right hand first. He lept a little slower than usual so his branch grab was very clear this time!", "Leap to tree with left hand on top", "Leap three times with left hand on top", "Grasp branch from above with left hand while locomoting", "Grasp branch with all 4 limbs. Left hand on top. Climbing down, with left hand on top the whole time.", "Leap to pole and grasp with all 4 limbs. Right hand on top.", "Sierra goes to lower tree limb. She holds onto the tree limb with her right hand.", "Whole locomoting, grasp branch with right hand on top", "Grab branch in outdoor cage with right hand", "Sophia grasps structure starting with right hand", "Sophia climbs down starting with her right hand", "Sophia grabs top of outdoor wage with Rh to swing onto branch", "Locomoting with right hand first. Crawling across ledge.", "Grasp branch with right hand", "Grasp branch with right hand", "Resting on tree with 3 limbs. Holding with both feet and right hand.", "Rest while holding branch with left hand", "Grasp pole with left hand on top. Sitting and holding pole with all limbs except for right hand.", "Sit and grasp pole with all 4 limbs. Left hand on top. Stop at 9:59:08", "Sit and grasp pole with just left hand. Stop at 10:01:48", "Grasp pole with left hand on top. Sitting and holding onto pole with all 4 limbs. Stop at 10:03:25", "Grasp pole with right hand on top(cling with all 4 limbs) stop at 9:43:15", "Grasp pole with both feet and with right hand. Left hand free. Stop at 9:53:27", "Grasp pole with both feet and with right hand. Left hand free.", "Grasp fence with right hand. Stop at 10:12:23", "Holds branch with left hand while resting.", "Hold branch with left hand on top while resting", "Grasp mesh fence with left hand while resting on ground. Stop at 10:27:01", "Grasp mesh with 3 limbs (no left hand). Right hand on top.", "Grasp pole with just right hand while sitting on platform.", "Grasp branch with all 4 limbs, right hand on top. Stop at 9:05:11", "Grasp mesh with 3 limbs (no left hand) right hand on top. Stop at 9:08:27", "Grasp mesh with all 4 limbs, right hand on top", "Grasp mesh wall with right hand.", "Grasp onto mesh with right hand", "Grasp onto mesh with right hand", "Grasp onto mesh wall with 3 limbs (no left hand) while resting.", "Grasp onto mesh wall with 3 limbs (no left hand) while resting.", "Grasp onto mesh wall with 3 limbs (no left hand) while resting.", "Grasp mesh wall with all 4 limbs, right hand on top", "Grasp pole with 3 limbs (no right hand) left hand on top.", "Grasp structure with all 4 limbs, right hand on top", "Grasp onto pole with all 4 limbs, left hand on top. Stop at 8:24:29", "Grasp structure with 3 limbs (no right hand) left hand on top. Stop at 8:38:00", "Grasp branch with all 4 limbs, left hand on top", "Grasp onto mesh wall with left hand", "Grasp onto mesh wall with just left hand", "Grasp onto mesh wall with just left hand", "Grasp onto mesh with 3 limbs (no right hand). Stop at 10:06:50", "Grasp mesh with left hand resting", "Grasp mesh with just left hand while resting and sitting on the floor. Stop at 8:03:09", "While resting, grasp mesh with 3 limbs (no right hand). Left hand on top. Stop at 8:04:42.", "Grasp mesh with just left hand while sitting and resting.", "While resting, hold onto mesh wall with left hand and left foot. Stop at 9:50:18", "While resting, hold onto mesh wall with 3 limbs (no right hand). Stop at 10:04:12", "Grasp onto branch with just left hand while resting.", "Grasp mesh with just right hand while resting", "While resting, grasp onto beanch with right hand. Stop at 9:37:09", "Grasp onto mesh wall with 3 limbs (no left hand) while resting.", "Grasp mesh with 4 limbs while resting. Right hand on top.", "Grasp maple leaf with right hand. Holding tree with 4 limbs total.", "Grasp tree with right hand on top", "Grasp tree with left hand on top", "Grasp branch with right hand on top", "Grasp branch with right hand on top", "Hold onto branch with right hand on top while resting. Holding tree with 4 limbs total.", "Rest while holding onto branch with all 4 limbs. Right hand on top.", "Right hand hold branch while sitting on the ground and resting. Stop at 8:47:15", "Grasp branch with right hand on top.", "Grasp branch with right hand. Hold onto lower branch with other 3 limbs.", "Grasp branch with right hand (no other limbs) while resting.", "While resting, hold onto mesh wall with both hands and right hand on top.", "Hold onto mesh wall while resting with right hand on top. Holding with both hands and no feet.", "While resting, hold onto mesh wall with left hand and no other limbs", "Grasp pine tree branch with right hand on top. Hold tree with 3 other limbs.", "Rest on tree. Cling to tree with left hand on top", "Rest on tree. Cling to tree with left hand on top", "Rest while clinging onto branch with right hand on top", "Rest on tree with right hand on top", "Rest on branch with right hand on top", "Grasp mesh wall with right hand. 3 limbs, left hand free. Stop at 8:50:23", "Grasp mesh with all 4 limbs. Right hand on top. Stop at 8:52:59", "Grasp branch with all 4 limbs, right hand top. Stop at 9:04:28", "Grasp branch with 3 limbs (left hand free). Stop at 9:06:28", "Grasp branch with all 4 limbs, right hand on top. Stop at 9:08:17", "Grasp pole with 3 limbs, left hand free. Stop at 9:13:23", "Grasp branch with all 4 limbs, with right hand on top. Stop at 9:19:20", "Grasp branch with all 4 limbs, right hand on top. Stop at 9:33:45", "Grasp branch with right hand. Resting with othre limbs all on another branch.", "Grasp onto branch with just right hand. Feet are resting on a lower branch.", "Grasp branch with just right hand. Feet are resting on a lower branch.", "Grasp mesh wall with left hand. 3 limbs, right hand free. Stop at 8:51:18", "Grasp mesh with all 4 limbs. Left hand on top. Stop at 9:03:53", "Grasp onto mesh with 3 limbs (no right hand). Left hand on top.", "Grasp onto branch with just left hand. Feet are resting on a lower branch.", "Grasp branch with just left hand. Feet are resting on a lower branch.", "Grasp onto mesh with 3 limbs (no right hand). Left hand on top.", "Grasp mesh with all 4 limbs, left hand on top", "Grasp mesh with all 4 limbs. Left hand on top.", "Grasp branch with all 4 limbs while resting. Left hand on top.", "Grasp wall with 4 limbs (no right hand). Left hand is on top. Resting.", "While resting, grab branch with left hand.", "Grasp mesh wall with all 4 limbs, right hand on top", "Grasp mesh with only right hand while resting", "Grasp door frame with only right hand while resting", "Grasp onto wall with all 4 limbs. Left hand on top. Resting.", "Grasp mesh with right hand and both feet while resting.", "Resting while holding onto mesh with all 4 limbs. Right hand on top.", "Grasp onto mesh with 3 limbs (no left hand). Right hand on top. Resting.", "Hold onto branch with right hand while resting", "While resting, grasp onto mesh wall with just right hand.", "Grasp mesh with left hand", "Grasp onto pole with all 4 limbs. Left hand on top.", "Hold onto branch with left hand and both feet", "Grasp mesh with all 4 hands, right hand on top", "Grasp onto pole with all 4 limbs. Right hand on top.", "While resting, grasp onto mesh with just left hand.", "While resting, grab mesh with just left hand", "Grasp branch with right hand. Sitting with 2 feet. Holding onto branch with 3 limbs total (all except left hand)", "Grasp mesh fence with both hands, but right hand above left hand.", "Switch to right hand is on top while clinging to pole.", "Grasp pole with left hand on top", "Grasp fence mesh with left hand on top. Grasping with all 4 limbs", "Grasp wall with left hand on top (cling with all 4 limbs). Stop at 9:31:35", "Cling to pole with all 4 limbs. Left hand on top", "Grasp pole with all 4 limbs. Left hand top.", "Switch to grasp pole with right hand on top", "Grasp pole with right hand on top(cling with all 4 limbs) stop at 9:43:15", "Cling to pole with all 4 limbs. Right hand on top. Stop at 9:50:41", "Rest while grasping fence mesh with left hand. Sitting on ground", "Grasp pole with left hand while sitting", "Switch to grasp pole with left hand while sitting. Stop at 9:29:29", "Rest while grasping pole with right hand", "Switch to grasp pole with right hand while sitting.", "While resting, grasp onto branch with all 4 limbs, right hand on top", "While resting, grasp onto branch with 3 limbs (left hand not grasping) with right hand on top. Stop at 7:49:04", "Grasp branch with resting with all 4 limbs. Right hand on top.", "Sit on ledge while resting. Hold onto pole with just right hand", "While resting, grasp onto branch with all 4 limbs, right hand on top"})), Set Row States([0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0
	, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1
	, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1
	, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0
	, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1
	, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0])) << Run Formulas; Fit Group(Contingency(Y(:Side), X(:Category), Contingency Table), Contingency(Y(:Side), X(:Focal), Contingency Table), Contingency(Y(:Side), X(:Species), Contingency Table), Logistic(Y(:Side), X(:Age), Target Level("R")), Contingency(Y(:Side), X(:Sex), Contingency Table), <<{Arrange in Rows(5)})